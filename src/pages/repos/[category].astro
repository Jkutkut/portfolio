---
import type { GetStaticPaths } from "astro";
import { getCollection } from "astro:content";
import Layout from "../../layouts/Layout.astro";
import { str2slug } from "../../utils";
import Project from "../../components/Project.astro";
import type { RepoData } from "../../types";


export const getStaticPaths = (async () => {
  const categories = await getCollection('categories');
  if (!categories) {
    return [];
  }
  return categories.map(category => ({
    params: { category: str2slug(category.data.title) },
  }));
}) satisfies GetStaticPaths;

const categories = await getCollection('categories');
const { category: categoryName } = Astro.params;
const category = categories.find(cat => str2slug(cat.data.title) === categoryName.toLowerCase());

if (!category) {
  throw new Error(`Category "${categoryName}" not found.`);
}
---

<Layout>
  <br/><br/><br/><br/>
  <h1>{category.data.title}</h1>

  <section class="projects">
    {category.data.repos.map(repo => (
      <Project repo={repo as RepoData} />
    )) || <p>No repositories found in this category.</p>}
  </section>
</Layout>
